<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
    <bean class="org.springframework.beans.factory.config.CustomScopeConfigurer">
        <property name="scopes">
            <map>
                <entry key="threadscope">
                    <!--这个接口的实现类是利用了spring框架内置的接口，也可以自定义-->
                    <bean class="org.springframework.context.support.SimpleThreadScope"></bean>
                </entry>
            </map>
        </property>
    </bean>

    <bean id="sb" class="com.yuan.springbean" scope="threadscope"></bean>
</beans>
---------------------------------------------------------------------------------------
测试类代码
package com.yuan;

import org.junit.Test;
import org.springframework.context.ApplicationContext;
import org.springframework.context.support.ClassPathXmlApplicationContext;

public class Testspringbean {
    @Test
    public void testspringbean(){
        //每次调用getbean方法时都初始化一个对象
        ApplicationContext ac=new ClassPathXmlApplicationContext("spring-bean.xml");
        springbean sb=ac.getBean("sb",springbean.class);
        springbean sb1=ac.getBean("sb",springbean.class);
        springbean sb2=ac.getBean("sb",springbean.class);
        System.out.println(sb);
        System.out.println(sb2);
        System.out.println(sb1);
    }
}
--------------------------------------------------------------------------------------
运行结果
D:\Java\jdk1.8.0_321\bin\java.exe -ea -Didea.test.cyclic.buffer.size=1048576 "-javaagent:D:\IDEA\IntelliJ IDEA 2021.3.2\lib\idea_rt.jar=54940:D:\IDEA\IntelliJ IDEA 2021.3.2\bin" -Dfile.encoding=UTF-8 -classpath "D:\IDEA\IntelliJ IDEA 2021.3.2\lib\idea_rt.jar;D:\IDEA\IntelliJ IDEA 2021.3.2\plugins\junit\lib\junit5-rt.jar;D:\IDEA\IntelliJ IDEA 2021.3.2\plugins\junit\lib\junit-rt.jar;D:\Java\jdk1.8.0_321\jre\lib\charsets.jar;D:\Java\jdk1.8.0_321\jre\lib\deploy.jar;D:\Java\jdk1.8.0_321\jre\lib\ext\access-bridge-64.jar;D:\Java\jdk1.8.0_321\jre\lib\ext\cldrdata.jar;D:\Java\jdk1.8.0_321\jre\lib\ext\dnsns.jar;D:\Java\jdk1.8.0_321\jre\lib\ext\jaccess.jar;D:\Java\jdk1.8.0_321\jre\lib\ext\jfxrt.jar;D:\Java\jdk1.8.0_321\jre\lib\ext\localedata.jar;D:\Java\jdk1.8.0_321\jre\lib\ext\nashorn.jar;D:\Java\jdk1.8.0_321\jre\lib\ext\sunec.jar;D:\Java\jdk1.8.0_321\jre\lib\ext\sunjce_provider.jar;D:\Java\jdk1.8.0_321\jre\lib\ext\sunmscapi.jar;D:\Java\jdk1.8.0_321\jre\lib\ext\sunpkcs11.jar;D:\Java\jdk1.8.0_321\jre\lib\ext\zipfs.jar;D:\Java\jdk1.8.0_321\jre\lib\javaws.jar;D:\Java\jdk1.8.0_321\jre\lib\jce.jar;D:\Java\jdk1.8.0_321\jre\lib\jfr.jar;D:\Java\jdk1.8.0_321\jre\lib\jfxswt.jar;D:\Java\jdk1.8.0_321\jre\lib\jsse.jar;D:\Java\jdk1.8.0_321\jre\lib\management-agent.jar;D:\Java\jdk1.8.0_321\jre\lib\plugin.jar;D:\Java\jdk1.8.0_321\jre\lib\resources.jar;D:\Java\jdk1.8.0_321\jre\lib\rt.jar;E:\java code\Springcourse\spring_006\target\test-classes;E:\java code\Springcourse\spring_006\target\classes;E:\Maven\repository\org\springframework\spring-context\5.3.23\spring-context-5.3.23.jar;E:\Maven\repository\org\springframework\spring-aop\5.3.23\spring-aop-5.3.23.jar;E:\Maven\repository\org\springframework\spring-beans\5.3.23\spring-beans-5.3.23.jar;E:\Maven\repository\org\springframework\spring-core\5.3.23\spring-core-5.3.23.jar;E:\Maven\repository\org\springframework\spring-jcl\5.3.23\spring-jcl-5.3.23.jar;E:\Maven\repository\org\springframework\spring-expression\5.3.23\spring-expression-5.3.23.jar;E:\Maven\repository\junit\junit\4.13.2\junit-4.13.2.jar;E:\Maven\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar" com.intellij.rt.junit.JUnitStarter -ideVersion5 -junit4 com.yuan.Testscope,testscope
springbean的无参数构造方法执行了
com.yuan.springbean@3b94d659
com.yuan.springbean@3b94d659
springbean的无参数构造方法执行了
com.yuan.springbean@7afeb2a1
com.yuan.springbean@7afeb2a1
